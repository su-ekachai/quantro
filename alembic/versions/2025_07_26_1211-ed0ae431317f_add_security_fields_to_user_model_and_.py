"""Add security fields to user model and login attempts table

Revision ID: ed0ae431317f
Revises: ae3707d3de9a
Create Date: 2025-07-26 12:11:50.116400

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ed0ae431317f"
down_revision: str | Sequence[str] | None = "ae3707d3de9a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "login_attempts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ip_address_hash", sa.String(length=64), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=False),
        sa.Column("failure_reason", sa.String(length=100), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_login_attempts_id"), "login_attempts", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_login_attempts_ip_address_hash"),
        "login_attempts",
        ["ip_address_hash"],
        unique=False,
    )
    op.create_index(
        op.f("ix_login_attempts_timestamp"),
        "login_attempts",
        ["timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_login_attempts_user_id"), "login_attempts", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_login_attempts_username"), "login_attempts", ["username"], unique=False
    )
    op.drop_index(
        op.f("idx_market_data_symbol_timeframe_time"), table_name="market_data"
    )
    op.drop_index(op.f("idx_trades_portfolio_time"), table_name="trades")
    op.add_column(
        "users", sa.Column("failed_login_attempts", sa.Integer(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("locked_until", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "users",
        sa.Column("last_failed_login", sa.DateTime(timezone=True), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "last_failed_login")
    op.drop_column("users", "locked_until")
    op.drop_column("users", "failed_login_attempts")
    op.create_index(
        op.f("idx_trades_portfolio_time"),
        "trades",
        ["portfolio_id", sa.literal_column("executed_at DESC")],
        unique=False,
    )
    op.create_index(
        op.f("idx_market_data_symbol_timeframe_time"),
        "market_data",
        ["symbol_id", "timeframe", sa.literal_column("timestamp DESC")],
        unique=False,
    )
    op.drop_index(op.f("ix_login_attempts_username"), table_name="login_attempts")
    op.drop_index(op.f("ix_login_attempts_user_id"), table_name="login_attempts")
    op.drop_index(op.f("ix_login_attempts_timestamp"), table_name="login_attempts")
    op.drop_index(
        op.f("ix_login_attempts_ip_address_hash"), table_name="login_attempts"
    )
    op.drop_index(op.f("ix_login_attempts_id"), table_name="login_attempts")
    op.drop_table("login_attempts")
    # ### end Alembic commands ###
